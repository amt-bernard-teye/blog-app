// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  READER
  BLOGGER
}

enum VerificationStatus {
  PENDING
  VERIFIED
  SUSPENDED
}

model User {
  id String @id
  name String
  email String
  password String
  role Role
  status VerificationStatus @default(PENDING)
  image String?

  @@map("users")
}

enum UsageStatus {
  ACTIVE
  HIDDEN
}

model Category {
  id Int @id @default(autoincrement())
  name String
  status UsageStatus @default(ACTIVE)
  posts Post[]

  @@map("categories")
}

model Tag {
  id Int @id @default(autoincrement())
  name String
  status UsageStatus @default(ACTIVE)
  posts PostTag[]

  @@map("tags")
}

enum PostStatus {
  ACTIVE
  HIDDEN
  REPORTED
}

model Post {
  id Int @id @default(autoincrement())
  title String @unique
  description String
  image String
  status UsageStatus @default(ACTIVE)
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
  tags PostTag[]

  @@map("posts")
}

model PostTag {
  id Int @id @default(autoincrement())
  postId Int
  post Post @relation(fields: [postId], references: [id])
  tagId Int
  tag Tag @relation(fields: [tagId], references: [id])

  @@map("post_tag")
}